{
	"id": "78f785abc4e6dab4b9b1d990ef62e383",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/12/ForWhile.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\ncontract ForWhile {\n\n    // for 循环，从 1 加到 N\n    function sumToNFor(uint16 n) public pure returns(uint16) {\n        uint16 sum = 0;\n        uint16 i = 1;   // 这里的变量声明在最前面, 也可以声明在for括号里面，多种方式\n        for(; i <= n; ) { // 循环控制语句只剩下test-statement: i <= n_\n            sum += i;\n            i++; // 修改循环变量的值_\n        }\n        return sum;\n    }\n\n    // 其实这种形式就类似于 while 循环，我们可以稍作修改就变成 while 循环：\n    // while 循环，从 1 加到 N\n    function sumToNWhile(uint16 n) public pure returns(uint16) {\n        uint16 sum = 0;\n        uint16 i = 1; \n        while(i <= n) { //只改了这一行_\n            sum += i;\n            i++; // 修改循环变量的值_\n        }\n    }\n        \n        \n    // do while 循环区别于 while 循环的地方是，它的循环体至少会执行一遍。然后才会执行 test-statement 判断是否为 true 。\n    // 如果是则把循环体再执行一遍。如果 test-statement 为 false ，那么退出循环并继续执行余下的代码。\n    // do while 循环, 从 1 加到 N\n    function sumToNDoWhile(uint16 n) public pure returns(uint16) {\n        uint16 sum = 0;\n        uint16 i = 1; \n        do {\n            sum += i;\n            i++; // 修改循环变量的值_\n        } while(i <= n); // 检查是否还满足循环条件_\n        \n        return sum;\n    }\n\n    // do-while 循环与 for 和 while 循环存在一个明显的区别：do-while 循环保证了循环体至少被执行一次，即使循环条件一开始就不满足。\n    // 相反，for 和 while 循环在条件不满足时可能一次都不执行。因此，当你需要确保循环体至少执行一次时，使用 do-while 循环是更自然、更清晰的选择。\n    // 使用它并非必须，但它可以让控制逻辑看起来更直观，代码更简洁。\n\n    // 总的来说，for、while 和 do-while 三种循环在功能上相似，都能完成重复执行代码的任务。for 和 while 循环在使用上比较相似，\n    // 可以根据个人偏好或代码的清晰度来选择。而 do-while 循环通常用在至少需要执行一次循环体的场景中。\n    // 选择合适的循环类型可以根据具体的应用场景和代码可读性的需求来决定。\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/12/ForWhile.sol": {
				"ForWhile": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "n",
									"type": "uint16"
								}
							],
							"name": "sumToNDoWhile",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "n",
									"type": "uint16"
								}
							],
							"name": "sumToNFor",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "n",
									"type": "uint16"
								}
							],
							"name": "sumToNWhile",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/12/ForWhile.sol\":57:2423  contract ForWhile {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/12/ForWhile.sol\":57:2423  contract ForWhile {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x206da722\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x80779dac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x92c34fc7\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/12/ForWhile.sol\":117:494  function sumToNFor(uint16 n) public pure returns(uint16) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12/ForWhile.sol\":640:877  function sumToNWhile(uint16 n) public pure returns(uint16) {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12/ForWhile.sol\":1232:1520  function sumToNDoWhile(uint16 n) public pure returns(uint16) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12/ForWhile.sol\":117:494  function sumToNFor(uint16 n) public pure returns(uint16) {... */\n    tag_9:\n        /* \"contracts/12/ForWhile.sol\":166:172  uint16 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":184:194  uint16 sum */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":197:198  0 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":184:198  uint16 sum = 0 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":208:216  uint16 i */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":219:220  1 */\n      0x01\n        /* \"contracts/12/ForWhile.sol\":208:220  uint16 i = 1 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":319:468  for(; i <= n; ) { // 循环控制语句只剩下test-statement: i <= n_... */\n    tag_21:\n        /* \"contracts/12/ForWhile.sol\":330:331  n */\n      dup4\n        /* \"contracts/12/ForWhile.sol\":325:331  i <= n */\n      0xffff\n      and\n        /* \"contracts/12/ForWhile.sol\":325:326  i */\n      dup2\n        /* \"contracts/12/ForWhile.sol\":325:331  i <= n */\n      0xffff\n      and\n      gt\n        /* \"contracts/12/ForWhile.sol\":319:468  for(; i <= n; ) { // 循环控制语句只剩下test-statement: i <= n_... */\n      tag_22\n      jumpi\n        /* \"contracts/12/ForWhile.sol\":410:411  i */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":403:411  sum += i */\n      dup3\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      pop\n        /* \"contracts/12/ForWhile.sol\":425:428  i++ */\n      dup1\n      dup1\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":319:468  for(; i <= n; ) { // 循环控制语句只剩下test-statement: i <= n_... */\n      jump(tag_21)\n    tag_22:\n        /* \"contracts/12/ForWhile.sol\":484:487  sum */\n      dup2\n        /* \"contracts/12/ForWhile.sol\":477:487  return sum */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":117:494  function sumToNFor(uint16 n) public pure returns(uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/12/ForWhile.sol\":640:877  function sumToNWhile(uint16 n) public pure returns(uint16) {... */\n    tag_14:\n        /* \"contracts/12/ForWhile.sol\":691:697  uint16 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":709:719  uint16 sum */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":722:723  0 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":709:723  uint16 sum = 0 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":733:741  uint16 i */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":744:745  1 */\n      0x01\n        /* \"contracts/12/ForWhile.sol\":733:745  uint16 i = 1 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":756:871  while(i <= n) { //只改了这一行_... */\n    tag_29:\n        /* \"contracts/12/ForWhile.sol\":767:768  n */\n      dup4\n        /* \"contracts/12/ForWhile.sol\":762:768  i <= n */\n      0xffff\n      and\n        /* \"contracts/12/ForWhile.sol\":762:763  i */\n      dup2\n        /* \"contracts/12/ForWhile.sol\":762:768  i <= n */\n      0xffff\n      and\n      gt\n        /* \"contracts/12/ForWhile.sol\":756:871  while(i <= n) { //只改了这一行_... */\n      tag_30\n      jumpi\n        /* \"contracts/12/ForWhile.sol\":813:814  i */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":806:814  sum += i */\n      dup3\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      swap2\n      pop\n        /* \"contracts/12/ForWhile.sol\":828:831  i++ */\n      dup1\n      dup1\n      tag_32\n      swap1\n      tag_27\n      jump\t// in\n    tag_32:\n      swap2\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":756:871  while(i <= n) { //只改了这一行_... */\n      jump(tag_29)\n    tag_30:\n        /* \"contracts/12/ForWhile.sol\":699:877  {... */\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":640:877  function sumToNWhile(uint16 n) public pure returns(uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/12/ForWhile.sol\":1232:1520  function sumToNDoWhile(uint16 n) public pure returns(uint16) {... */\n    tag_18:\n        /* \"contracts/12/ForWhile.sol\":1285:1291  uint16 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":1303:1313  uint16 sum */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":1316:1317  0 */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":1303:1317  uint16 sum = 0 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":1327:1335  uint16 i */\n      0x00\n        /* \"contracts/12/ForWhile.sol\":1338:1339  1 */\n      0x01\n        /* \"contracts/12/ForWhile.sol\":1327:1339  uint16 i = 1 */\n      swap1\n      pop\n        /* \"contracts/12/ForWhile.sol\":1350:1447  do {... */\n    tag_34:\n        /* \"contracts/12/ForWhile.sol\":1374:1375  i */\n      dup1\n        /* \"contracts/12/ForWhile.sol\":1367:1375  sum += i */\n      dup3\n      tag_37\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_37:\n      swap2\n      pop\n        /* \"contracts/12/ForWhile.sol\":1389:1392  i++ */\n      dup1\n      dup1\n      tag_38\n      swap1\n      tag_27\n      jump\t// in\n    tag_38:\n      swap2\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":1444:1445  n */\n      dup4\n        /* \"contracts/12/ForWhile.sol\":1439:1445  i <= n */\n      0xffff\n      and\n        /* \"contracts/12/ForWhile.sol\":1439:1440  i */\n      dup2\n        /* \"contracts/12/ForWhile.sol\":1439:1445  i <= n */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/12/ForWhile.sol\":1350:1447  do {... */\n      tag_34\n      jumpi\n        /* \"contracts/12/ForWhile.sol\":1510:1513  sum */\n      dup2\n        /* \"contracts/12/ForWhile.sol\":1503:1513  return sum */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/12/ForWhile.sol\":1232:1520  function sumToNDoWhile(uint16 n) public pure returns(uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_40:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:423   */\n    tag_42:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:416   */\n      0xffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:417   */\n      and\n        /* \"#utility.yul\":388:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":429:549   */\n    tag_43:\n        /* \"#utility.yul\":501:524   */\n      tag_53\n        /* \"#utility.yul\":518:523   */\n      dup2\n        /* \"#utility.yul\":501:524   */\n      tag_42\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":494:499   */\n      dup2\n        /* \"#utility.yul\":491:525   */\n      eq\n        /* \"#utility.yul\":481:543   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":539:540   */\n      0x00\n        /* \"#utility.yul\":536:537   */\n      dup1\n        /* \"#utility.yul\":529:541   */\n      revert\n        /* \"#utility.yul\":481:543   */\n    tag_54:\n        /* \"#utility.yul\":429:549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":555:692   */\n    tag_44:\n        /* \"#utility.yul\":600:605   */\n      0x00\n        /* \"#utility.yul\":638:644   */\n      dup2\n        /* \"#utility.yul\":625:645   */\n      calldataload\n        /* \"#utility.yul\":616:645   */\n      swap1\n      pop\n        /* \"#utility.yul\":654:686   */\n      tag_56\n        /* \"#utility.yul\":680:685   */\n      dup2\n        /* \"#utility.yul\":654:686   */\n      tag_43\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":555:692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:1025   */\n    tag_8:\n        /* \"#utility.yul\":756:762   */\n      0x00\n        /* \"#utility.yul\":805:807   */\n      0x20\n        /* \"#utility.yul\":793:802   */\n      dup3\n        /* \"#utility.yul\":784:791   */\n      dup5\n        /* \"#utility.yul\":780:803   */\n      sub\n        /* \"#utility.yul\":776:808   */\n      slt\n        /* \"#utility.yul\":773:892   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":811:890   */\n      tag_59\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":773:892   */\n    tag_58:\n        /* \"#utility.yul\":931:932   */\n      0x00\n        /* \"#utility.yul\":956:1008   */\n      tag_60\n        /* \"#utility.yul\":1000:1007   */\n      dup5\n        /* \"#utility.yul\":991:997   */\n      dup3\n        /* \"#utility.yul\":980:989   */\n      dup6\n        /* \"#utility.yul\":976:998   */\n      add\n        /* \"#utility.yul\":956:1008   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":946:1008   */\n      swap2\n      pop\n        /* \"#utility.yul\":902:1018   */\n      pop\n        /* \"#utility.yul\":698:1025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1031:1146   */\n    tag_45:\n        /* \"#utility.yul\":1116:1139   */\n      tag_62\n        /* \"#utility.yul\":1133:1138   */\n      dup2\n        /* \"#utility.yul\":1116:1139   */\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1111:1114   */\n      dup3\n        /* \"#utility.yul\":1104:1140   */\n      mstore\n        /* \"#utility.yul\":1031:1146   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1370   */\n    tag_11:\n        /* \"#utility.yul\":1243:1247   */\n      0x00\n        /* \"#utility.yul\":1281:1283   */\n      0x20\n        /* \"#utility.yul\":1270:1279   */\n      dup3\n        /* \"#utility.yul\":1266:1284   */\n      add\n        /* \"#utility.yul\":1258:1284   */\n      swap1\n      pop\n        /* \"#utility.yul\":1294:1363   */\n      tag_64\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1349:1358   */\n      dup4\n        /* \"#utility.yul\":1345:1362   */\n      add\n        /* \"#utility.yul\":1336:1342   */\n      dup5\n        /* \"#utility.yul\":1294:1363   */\n      tag_45\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1152:1370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1376:1556   */\n    tag_46:\n        /* \"#utility.yul\":1424:1501   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1421:1422   */\n      0x00\n        /* \"#utility.yul\":1414:1502   */\n      mstore\n        /* \"#utility.yul\":1521:1525   */\n      0x11\n        /* \"#utility.yul\":1518:1519   */\n      0x04\n        /* \"#utility.yul\":1511:1526   */\n      mstore\n        /* \"#utility.yul\":1545:1549   */\n      0x24\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1535:1550   */\n      revert\n        /* \"#utility.yul\":1562:1755   */\n    tag_25:\n        /* \"#utility.yul\":1601:1604   */\n      0x00\n        /* \"#utility.yul\":1620:1639   */\n      tag_67\n        /* \"#utility.yul\":1637:1638   */\n      dup3\n        /* \"#utility.yul\":1620:1639   */\n      tag_42\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1615:1639   */\n      swap2\n      pop\n        /* \"#utility.yul\":1653:1672   */\n      tag_68\n        /* \"#utility.yul\":1670:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1672   */\n      tag_42\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1648:1672   */\n      swap3\n      pop\n        /* \"#utility.yul\":1695:1696   */\n      dup3\n        /* \"#utility.yul\":1692:1693   */\n      dup3\n        /* \"#utility.yul\":1688:1697   */\n      add\n        /* \"#utility.yul\":1681:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1718:1724   */\n      0xffff\n        /* \"#utility.yul\":1713:1716   */\n      dup2\n        /* \"#utility.yul\":1710:1725   */\n      gt\n        /* \"#utility.yul\":1707:1748   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1728:1746   */\n      tag_70\n      tag_46\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1707:1748   */\n    tag_69:\n        /* \"#utility.yul\":1562:1755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:1932   */\n    tag_27:\n        /* \"#utility.yul\":1799:1802   */\n      0x00\n        /* \"#utility.yul\":1822:1845   */\n      tag_72\n        /* \"#utility.yul\":1839:1844   */\n      dup3\n        /* \"#utility.yul\":1822:1845   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1813:1845   */\n      swap2\n      pop\n        /* \"#utility.yul\":1867:1873   */\n      0xffff\n        /* \"#utility.yul\":1860:1865   */\n      dup3\n        /* \"#utility.yul\":1857:1874   */\n      sub\n        /* \"#utility.yul\":1854:1897   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1877:1895   */\n      tag_74\n      tag_46\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1854:1897   */\n    tag_73:\n        /* \"#utility.yul\":1924:1925   */\n      0x01\n        /* \"#utility.yul\":1917:1922   */\n      dup3\n        /* \"#utility.yul\":1913:1926   */\n      add\n        /* \"#utility.yul\":1906:1926   */\n      swap1\n      pop\n        /* \"#utility.yul\":1761:1932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a32a47aee7a2c5154af9f0373960966788dccd0cc44d8794ab27d6adc235a7d164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102ea8061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063206da7221461004357806380779dac1461007357806392c34fc7146100a3575b5f80fd5b61005d600480360381019061005891906101d6565b6100d3565b60405161006a9190610210565b60405180910390f35b61008d600480360381019061008891906101d6565b610118565b60405161009a9190610210565b60405180910390f35b6100bd60048036038101906100b891906101d6565b61015a565b6040516100ca9190610210565b60405180910390f35b5f805f90505f600190505b8361ffff168161ffff161161010e5780826100f99190610256565b915080806101069061028b565b9150506100de565b8192505050919050565b5f805f90505f600190505b8361ffff168161ffff161161015357808261013e9190610256565b9150808061014b9061028b565b915050610123565b5050919050565b5f805f90505f600190505b80826101719190610256565b9150808061017e9061028b565b9150508361ffff168161ffff161115610165578192505050919050565b5f80fd5b5f61ffff82169050919050565b6101b58161019f565b81146101bf575f80fd5b50565b5f813590506101d0816101ac565b92915050565b5f602082840312156101eb576101ea61019b565b5b5f6101f8848285016101c2565b91505092915050565b61020a8161019f565b82525050565b5f6020820190506102235f830184610201565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102608261019f565b915061026b8361019f565b9250828201905061ffff81111561028557610284610229565b5b92915050565b5f6102958261019f565b915061ffff82036102a9576102a8610229565b5b60018201905091905056fea2646970667358221220a32a47aee7a2c5154af9f0373960966788dccd0cc44d8794ab27d6adc235a7d164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x206DA722 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x80779DAC EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x92C34FC7 EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0x10E JUMPI DUP1 DUP3 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x106 SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDE JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0x153 JUMPI DUP1 DUP3 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x14B SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x123 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 DUP3 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x17E SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x165 JUMPI DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x19F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0 DUP2 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x19B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A DUP2 PUSH2 0x19F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223 PUSH0 DUP4 ADD DUP5 PUSH2 0x201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x260 DUP3 PUSH2 0x19F JUMP JUMPDEST SWAP2 POP PUSH2 0x26B DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0x229 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x295 DUP3 PUSH2 0x19F JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0x2A SELFBALANCE 0xAE 0xE7 LOG2 0xC5 ISZERO BLOBBASEFEE 0xF9 CREATE CALLDATACOPY CODECOPY PUSH1 0x96 PUSH8 0x88DCCD0CC44D8794 0xAB 0x27 0xD6 0xAD 0xC2 CALLDATALOAD 0xA7 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:2366:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@sumToNDoWhile_89": {
									"entryPoint": 346,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sumToNFor_31": {
									"entryPoint": 211,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sumToNWhile_59": {
									"entryPoint": 280,
									"id": 59,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint16": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint16": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1935:1",
										"nodeType": "YulBlock",
										"src": "0:1935:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:45:1",
													"nodeType": "YulBlock",
													"src": "378:45:1",
													"statements": [
														{
															"nativeSrc": "388:29:1",
															"nodeType": "YulAssignment",
															"src": "388:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:6:1",
																		"nodeType": "YulLiteral",
																		"src": "410:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:18:1",
																"nodeType": "YulFunctionCall",
																"src": "399:18:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "334:89:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:89:1"
											},
											{
												"body": {
													"nativeSrc": "471:78:1",
													"nodeType": "YulBlock",
													"src": "471:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "527:16:1",
																"nodeType": "YulBlock",
																"src": "527:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:1",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "539:1:1",
																					"nodeType": "YulLiteral",
																					"src": "539:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "529:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "529:6:1"
																			},
																			"nativeSrc": "529:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "529:12:1"
																		},
																		"nativeSrc": "529:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "529:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "494:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "494:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "518:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "518:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "501:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "501:16:1"
																				},
																				"nativeSrc": "501:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "501:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "491:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "491:2:1"
																		},
																		"nativeSrc": "491:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "491:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "484:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																},
																"nativeSrc": "484:42:1",
																"nodeType": "YulFunctionCall",
																"src": "484:42:1"
															},
															"nativeSrc": "481:62:1",
															"nodeType": "YulIf",
															"src": "481:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "429:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "464:5:1",
														"nodeType": "YulTypedName",
														"src": "464:5:1",
														"type": ""
													}
												],
												"src": "429:120:1"
											},
											{
												"body": {
													"nativeSrc": "606:86:1",
													"nodeType": "YulBlock",
													"src": "606:86:1",
													"statements": [
														{
															"nativeSrc": "616:29:1",
															"nodeType": "YulAssignment",
															"src": "616:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "638:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "638:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "625:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:1"
																},
																"nativeSrc": "625:20:1",
																"nodeType": "YulFunctionCall",
																"src": "625:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "616:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "680:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "680:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "654:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:25:1"
																},
																"nativeSrc": "654:32:1",
																"nodeType": "YulFunctionCall",
																"src": "654:32:1"
															},
															"nativeSrc": "654:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "654:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "555:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "584:6:1",
														"nodeType": "YulTypedName",
														"src": "584:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "592:3:1",
														"nodeType": "YulTypedName",
														"src": "592:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "600:5:1",
														"nodeType": "YulTypedName",
														"src": "600:5:1",
														"type": ""
													}
												],
												"src": "555:137:1"
											},
											{
												"body": {
													"nativeSrc": "763:262:1",
													"nodeType": "YulBlock",
													"src": "763:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:83:1",
																"nodeType": "YulBlock",
																"src": "809:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "811:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "811:77:1"
																			},
																			"nativeSrc": "811:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "811:79:1"
																		},
																		"nativeSrc": "811:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "784:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "784:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "793:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "780:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:1"
																		},
																		"nativeSrc": "780:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "780:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "805:2:1",
																		"nodeType": "YulLiteral",
																		"src": "805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "776:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "776:3:1"
																},
																"nativeSrc": "776:32:1",
																"nodeType": "YulFunctionCall",
																"src": "776:32:1"
															},
															"nativeSrc": "773:119:1",
															"nodeType": "YulIf",
															"src": "773:119:1"
														},
														{
															"nativeSrc": "902:116:1",
															"nodeType": "YulBlock",
															"src": "902:116:1",
															"statements": [
																{
																	"nativeSrc": "917:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "917:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "931:1:1",
																		"nodeType": "YulLiteral",
																		"src": "931:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "921:6:1",
																			"nodeType": "YulTypedName",
																			"src": "921:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "946:62:1",
																	"nodeType": "YulAssignment",
																	"src": "946:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "980:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "980:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "991:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "991:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "976:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "976:3:1"
																				},
																				"nativeSrc": "976:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "976:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1000:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1000:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "956:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:19:1"
																		},
																		"nativeSrc": "956:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "946:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "946:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nativeSrc": "698:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "733:9:1",
														"nodeType": "YulTypedName",
														"src": "733:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "744:7:1",
														"nodeType": "YulTypedName",
														"src": "744:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "756:6:1",
														"nodeType": "YulTypedName",
														"src": "756:6:1",
														"type": ""
													}
												],
												"src": "698:327:1"
											},
											{
												"body": {
													"nativeSrc": "1094:52:1",
													"nodeType": "YulBlock",
													"src": "1094:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1111:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1111:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1133:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1133:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "1116:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "1116:16:1"
																		},
																		"nativeSrc": "1116:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:1"
																},
																"nativeSrc": "1104:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1104:36:1"
															},
															"nativeSrc": "1104:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1104:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "1031:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1082:5:1",
														"nodeType": "YulTypedName",
														"src": "1082:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1089:3:1",
														"nodeType": "YulTypedName",
														"src": "1089:3:1",
														"type": ""
													}
												],
												"src": "1031:115:1"
											},
											{
												"body": {
													"nativeSrc": "1248:122:1",
													"nodeType": "YulBlock",
													"src": "1248:122:1",
													"statements": [
														{
															"nativeSrc": "1258:26:1",
															"nodeType": "YulAssignment",
															"src": "1258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1270:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1281:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1266:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1266:3:1"
																},
																"nativeSrc": "1266:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1258:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1336:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1349:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1349:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1360:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1360:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1345:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:1"
																		},
																		"nativeSrc": "1345:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "1294:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "1294:41:1"
																},
																"nativeSrc": "1294:69:1",
																"nodeType": "YulFunctionCall",
																"src": "1294:69:1"
															},
															"nativeSrc": "1294:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "1294:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "1152:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1220:9:1",
														"nodeType": "YulTypedName",
														"src": "1220:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1232:6:1",
														"nodeType": "YulTypedName",
														"src": "1232:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1243:4:1",
														"nodeType": "YulTypedName",
														"src": "1243:4:1",
														"type": ""
													}
												],
												"src": "1152:218:1"
											},
											{
												"body": {
													"nativeSrc": "1404:152:1",
													"nodeType": "YulBlock",
													"src": "1404:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1421:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1421:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1424:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1424:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:1"
																},
																"nativeSrc": "1414:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1414:88:1"
															},
															"nativeSrc": "1414:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1414:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1518:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1518:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1521:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1521:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:1"
																},
																"nativeSrc": "1511:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1511:15:1"
															},
															"nativeSrc": "1511:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1511:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1542:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1542:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1545:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1545:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1535:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1535:6:1"
																},
																"nativeSrc": "1535:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1535:15:1"
															},
															"nativeSrc": "1535:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1535:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1376:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1376:180:1"
											},
											{
												"body": {
													"nativeSrc": "1605:150:1",
													"nodeType": "YulBlock",
													"src": "1605:150:1",
													"statements": [
														{
															"nativeSrc": "1615:24:1",
															"nodeType": "YulAssignment",
															"src": "1615:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1637:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1637:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "1620:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "1620:16:1"
																},
																"nativeSrc": "1620:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1620:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1615:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1615:1:1"
																}
															]
														},
														{
															"nativeSrc": "1648:24:1",
															"nodeType": "YulAssignment",
															"src": "1648:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1670:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1670:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "1653:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "1653:16:1"
																},
																"nativeSrc": "1653:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1653:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1648:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1648:1:1"
																}
															]
														},
														{
															"nativeSrc": "1681:16:1",
															"nodeType": "YulAssignment",
															"src": "1681:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1692:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1692:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1695:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1695:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:3:1"
																},
																"nativeSrc": "1688:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1688:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1726:22:1",
																"nodeType": "YulBlock",
																"src": "1726:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1728:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1728:16:1"
																			},
																			"nativeSrc": "1728:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1728:18:1"
																		},
																		"nativeSrc": "1728:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "1713:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1718:6:1",
																		"nodeType": "YulLiteral",
																		"src": "1718:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1710:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1710:2:1"
																},
																"nativeSrc": "1710:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1710:15:1"
															},
															"nativeSrc": "1707:41:1",
															"nodeType": "YulIf",
															"src": "1707:41:1"
														}
													]
												},
												"name": "checked_add_t_uint16",
												"nativeSrc": "1562:193:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1592:1:1",
														"nodeType": "YulTypedName",
														"src": "1592:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1595:1:1",
														"nodeType": "YulTypedName",
														"src": "1595:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1601:3:1",
														"nodeType": "YulTypedName",
														"src": "1601:3:1",
														"type": ""
													}
												],
												"src": "1562:193:1"
											},
											{
												"body": {
													"nativeSrc": "1803:129:1",
													"nodeType": "YulBlock",
													"src": "1803:129:1",
													"statements": [
														{
															"nativeSrc": "1813:32:1",
															"nodeType": "YulAssignment",
															"src": "1813:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1839:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1839:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nativeSrc": "1822:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "1822:16:1"
																},
																"nativeSrc": "1822:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1822:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1813:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1813:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1875:22:1",
																"nodeType": "YulBlock",
																"src": "1875:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1877:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1877:16:1"
																			},
																			"nativeSrc": "1877:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1877:18:1"
																		},
																		"nativeSrc": "1877:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1877:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1860:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:6:1",
																		"nodeType": "YulLiteral",
																		"src": "1867:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1857:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1857:2:1"
																},
																"nativeSrc": "1857:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1857:17:1"
															},
															"nativeSrc": "1854:43:1",
															"nodeType": "YulIf",
															"src": "1854:43:1"
														},
														{
															"nativeSrc": "1906:20:1",
															"nodeType": "YulAssignment",
															"src": "1906:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1917:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1917:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:1"
																},
																"nativeSrc": "1913:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1913:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1906:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint16",
												"nativeSrc": "1761:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1789:5:1",
														"nodeType": "YulTypedName",
														"src": "1789:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1799:3:1",
														"nodeType": "YulTypedName",
														"src": "1799:3:1",
														"type": ""
													}
												],
												"src": "1761:171:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint16(x, y) -> sum {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffff) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint16(value) -> ret {\n        value := cleanup_t_uint16(value)\n        if eq(value, 0xffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063206da7221461004357806380779dac1461007357806392c34fc7146100a3575b5f80fd5b61005d600480360381019061005891906101d6565b6100d3565b60405161006a9190610210565b60405180910390f35b61008d600480360381019061008891906101d6565b610118565b60405161009a9190610210565b60405180910390f35b6100bd60048036038101906100b891906101d6565b61015a565b6040516100ca9190610210565b60405180910390f35b5f805f90505f600190505b8361ffff168161ffff161161010e5780826100f99190610256565b915080806101069061028b565b9150506100de565b8192505050919050565b5f805f90505f600190505b8361ffff168161ffff161161015357808261013e9190610256565b9150808061014b9061028b565b915050610123565b5050919050565b5f805f90505f600190505b80826101719190610256565b9150808061017e9061028b565b9150508361ffff168161ffff161115610165578192505050919050565b5f80fd5b5f61ffff82169050919050565b6101b58161019f565b81146101bf575f80fd5b50565b5f813590506101d0816101ac565b92915050565b5f602082840312156101eb576101ea61019b565b5b5f6101f8848285016101c2565b91505092915050565b61020a8161019f565b82525050565b5f6020820190506102235f830184610201565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102608261019f565b915061026b8361019f565b9250828201905061ffff81111561028557610284610229565b5b92915050565b5f6102958261019f565b915061ffff82036102a9576102a8610229565b5b60018201905091905056fea2646970667358221220a32a47aee7a2c5154af9f0373960966788dccd0cc44d8794ab27d6adc235a7d164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x206DA722 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x80779DAC EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x92C34FC7 EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0x10E JUMPI DUP1 DUP3 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x106 SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDE JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT PUSH2 0x153 JUMPI DUP1 DUP3 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x14B SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x123 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 DUP3 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x17E SWAP1 PUSH2 0x28B JUMP JUMPDEST SWAP2 POP POP DUP4 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x165 JUMPI DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x19F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0 DUP2 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x19B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A DUP2 PUSH2 0x19F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223 PUSH0 DUP4 ADD DUP5 PUSH2 0x201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x260 DUP3 PUSH2 0x19F JUMP JUMPDEST SWAP2 POP PUSH2 0x26B DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0x229 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x295 DUP3 PUSH2 0x19F JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x229 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0x2A SELFBALANCE 0xAE 0xE7 LOG2 0xC5 ISZERO BLOBBASEFEE 0xF9 CREATE CALLDATACOPY CODECOPY PUSH1 0x96 PUSH8 0x88DCCD0CC44D8794 0xAB 0x27 0xD6 0xAD 0xC2 CALLDATALOAD 0xA7 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:2366:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;117:377;166:6;184:10;197:1;184:14;;208:8;219:1;208:12;;319:149;330:1;325:6;;:1;:6;;;319:149;;410:1;403:8;;;;;:::i;:::-;;;425:3;;;;;:::i;:::-;;;;319:149;;;484:3;477:10;;;;117:377;;;:::o;640:237::-;691:6;709:10;722:1;709:14;;733:8;744:1;733:12;;756:115;767:1;762:6;;:1;:6;;;756:115;;813:1;806:8;;;;;:::i;:::-;;;828:3;;;;;:::i;:::-;;;;756:115;;;699:178;;640:237;;;:::o;1232:288::-;1285:6;1303:10;1316:1;1303:14;;1327:8;1338:1;1327:12;;1350:97;1374:1;1367:8;;;;;:::i;:::-;;;1389:3;;;;;:::i;:::-;;;;1444:1;1439:6;;:1;:6;;;;1350:97;;1510:3;1503:10;;;;1232:288;;;:::o;88:117:1:-;197:1;194;187:12;334:89;370:7;410:6;403:5;399:18;388:29;;334:89;;;:::o;429:120::-;501:23;518:5;501:23;:::i;:::-;494:5;491:34;481:62;;539:1;536;529:12;481:62;429:120;:::o;555:137::-;600:5;638:6;625:20;616:29;;654:32;680:5;654:32;:::i;:::-;555:137;;;;:::o;698:327::-;756:6;805:2;793:9;784:7;780:23;776:32;773:119;;;811:79;;:::i;:::-;773:119;931:1;956:52;1000:7;991:6;980:9;976:22;956:52;:::i;:::-;946:62;;902:116;698:327;;;;:::o;1031:115::-;1116:23;1133:5;1116:23;:::i;:::-;1111:3;1104:36;1031:115;;:::o;1152:218::-;1243:4;1281:2;1270:9;1266:18;1258:26;;1294:69;1360:1;1349:9;1345:17;1336:6;1294:69;:::i;:::-;1152:218;;;;:::o;1376:180::-;1424:77;1421:1;1414:88;1521:4;1518:1;1511:15;1545:4;1542:1;1535:15;1562:193;1601:3;1620:19;1637:1;1620:19;:::i;:::-;1615:24;;1653:19;1670:1;1653:19;:::i;:::-;1648:24;;1695:1;1692;1688:9;1681:16;;1718:6;1713:3;1710:15;1707:41;;;1728:18;;:::i;:::-;1707:41;1562:193;;;;:::o;1761:171::-;1799:3;1822:23;1839:5;1822:23;:::i;:::-;1813:32;;1867:6;1860:5;1857:17;1854:43;;1877:18;;:::i;:::-;1854:43;1924:1;1917:5;1913:13;1906:20;;1761:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "149200",
								"executionCost": "194",
								"totalCost": "149394"
							},
							"external": {
								"sumToNDoWhile(uint16)": "infinite",
								"sumToNFor(uint16)": "infinite",
								"sumToNWhile(uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2423,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a32a47aee7a2c5154af9f0373960966788dccd0cc44d8794ab27d6adc235a7d164736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "206DA722"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "80779DAC"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "92C34FC7"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 640,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 640,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1232,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1232,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1232,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 208,
											"end": 216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 319,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 325,
											"end": 331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 325,
											"end": 326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 325,
											"end": 331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 319,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 319,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 410,
											"end": 411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 425,
											"end": 428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 425,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 425,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 319,
											"end": 468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 319,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 477,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 477,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 117,
											"end": 494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 762,
											"end": 768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 762,
											"end": 763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 762,
											"end": 768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 762,
											"end": 768,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 756,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 806,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 806,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 806,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 828,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 828,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 828,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 699,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 699,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1447,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1350,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1367,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1389,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1350,
											"end": 1447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 423,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 334,
											"end": 423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 429,
											"end": 549,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 501,
											"end": 524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 501,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 481,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 481,
											"end": 543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 539,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 481,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 481,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 429,
											"end": 549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 429,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 600,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 645,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 654,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 654,
											"end": 686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 780,
											"end": 803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 776,
											"end": 808,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 773,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 773,
											"end": 892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 811,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 811,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 811,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 811,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 773,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 931,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 991,
											"end": 997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 976,
											"end": 998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 956,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1146,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1031,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1133,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1116,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1294,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1363,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1294,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1556,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1376,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1549,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1620,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1653,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1728,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1761,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1822,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1854,
											"end": 1897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1877,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1854,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1917,
											"end": 1922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/12/ForWhile.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"sumToNDoWhile(uint16)": "92c34fc7",
							"sumToNFor(uint16)": "206da722",
							"sumToNWhile(uint16)": "80779dac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"n\",\"type\":\"uint16\"}],\"name\":\"sumToNDoWhile\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"n\",\"type\":\"uint16\"}],\"name\":\"sumToNFor\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"n\",\"type\":\"uint16\"}],\"name\":\"sumToNWhile\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/12/ForWhile.sol\":\"ForWhile\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/12/ForWhile.sol\":{\"keccak256\":\"0x3267ccaaf1faa6b36e139853c7520cbf57ca05b34c6074fc9c340db9eb84ddce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a1d5d376ad5a41d0fa6a2e774732c4b195b2b91965eecc009690028c18720cb\",\"dweb:/ipfs/QmYu7SmRtA4UVhB5Kybj9WmNPxaVcBtgEKvi7mwJccFLd3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/12/ForWhile.sol:19:56:\n   |\n19 |     function sumToNWhile(uint16 n) public pure returns(uint16) {\n   |                                                        ^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 697,
					"file": "contracts/12/ForWhile.sol",
					"start": 691
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/12/ForWhile.sol": {
				"ast": {
					"absolutePath": "contracts/12/ForWhile.sol",
					"exportedSymbols": {
						"ForWhile": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ForWhile",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "ForWhile",
							"nameLocation": "66:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "174:320:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "191:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 30,
														"src": "184:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 8,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "30",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "197:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "184:14:0"
											},
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "215:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 30,
														"src": "208:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 12,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"hexValue": "31",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "208:12:0"
											},
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "335:133:0",
													"statements": [
														{
															"expression": {
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 19,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "403:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "410:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "403:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 22,
															"nodeType": "ExpressionStatement",
															"src": "403:8:0"
														},
														{
															"expression": {
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "425:3:0",
																"subExpression": {
																	"id": 23,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 25,
															"nodeType": "ExpressionStatement",
															"src": "425:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "325:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 17,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "319:149:0"
											},
											{
												"expression": {
													"id": 28,
													"name": "sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "484:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 7,
												"id": 29,
												"nodeType": "Return",
												"src": "477:10:0"
											}
										]
									},
									"functionSelector": "206da722",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumToNFor",
									"nameLocation": "126:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "136:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "136:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:10:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "166:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 5,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:8:0"
									},
									"scope": 90,
									"src": "117:377:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "699:178:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "716:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "709:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 38,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"hexValue": "30",
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "722:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:14:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "740:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "733:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 42,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"hexValue": "31",
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "744:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "733:12:0"
											},
											{
												"body": {
													"id": 56,
													"nodeType": "Block",
													"src": "770:101:0",
													"statements": [
														{
															"expression": {
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 49,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "806:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 50,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "806:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "806:8:0"
														},
														{
															"expression": {
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "828:3:0",
																"subExpression": {
																	"id": 53,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "828:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 55,
															"nodeType": "ExpressionStatement",
															"src": "828:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 47,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "767:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "WhileStatement",
												"src": "756:115:0"
											}
										]
									},
									"functionSelector": "80779dac",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumToNWhile",
									"nameLocation": "649:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "668:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "661:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 32,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "661:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:10:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "691:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 35,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:8:0"
									},
									"scope": 90,
									"src": "640:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1293:227:0",
										"statements": [
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "1310:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 88,
														"src": "1303:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 66,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "1303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"hexValue": "30",
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1316:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1303:14:0"
											},
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "1334:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 88,
														"src": "1327:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 70,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "1327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"hexValue": "31",
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1338:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1327:12:0"
											},
											{
												"body": {
													"id": 81,
													"nodeType": "Block",
													"src": "1353:79:0",
													"statements": [
														{
															"expression": {
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 74,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "1367:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 75,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "1367:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 77,
															"nodeType": "ExpressionStatement",
															"src": "1367:8:0"
														},
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1389:3:0",
																"subExpression": {
																	"id": 78,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1389:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "1389:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "1439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 83,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1444:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "DoWhileStatement",
												"src": "1350:97:0"
											},
											{
												"expression": {
													"id": 86,
													"name": "sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "1510:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 65,
												"id": 87,
												"nodeType": "Return",
												"src": "1503:10:0"
											}
										]
									},
									"functionSelector": "92c34fc7",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumToNDoWhile",
									"nameLocation": "1241:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1255:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 60,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1255:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:10:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1285:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 63,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1285:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:8:0"
									},
									"scope": 90,
									"src": "1232:288:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 91,
							"src": "57:2366:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2391:0"
				},
				"id": 0
			}
		}
	}
}