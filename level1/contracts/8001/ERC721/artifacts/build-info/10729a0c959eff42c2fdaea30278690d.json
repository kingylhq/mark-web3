{
	"id": "10729a0c959eff42c2fdaea30278690d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/8001/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\nimport \"../../03/IERC165.sol\";\n\n/// @title ERC-721 Non-Fungible Token Standard\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\n///  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\ninterface IERC721 is IERC165 {\n\n    /**\n     @dev 当任何 NFT 的所有权通过任何形式发生变化时，需要触发该事件。\n     当 NFT 创建（`from` == 0）和销毁（`to` == 0）时会触发此事件。\n     例外情况：在合约创建期间，可以创建和分配任意数量的 NFT，而不会发出 Transfer。\n     在任何形式的资产转移时，该 NFT如果有批准地址将重置为无。\n    */\n    event Transfer(\n        address indexed _from,\n        address indexed _to,\n        uint256 indexed _tokenId\n    );\n\n    /**\n     * 当 NFT 的批准地址被更改或重新确认时，它会发出。\n     * 零地址表示没有批准的地址。\n     * 当 Transfer 事件发出时，这也表明该 NFT 如果有批准地址被重置为无。\n     */\n    event Approval(\n        address indexed _owner,\n        address indexed _approved,\n        uint256 indexed _tokenId\n    );\n\n    /// @dev 当为所有者启用或禁用操作员时，它会发出。 运营者可以管理所有者的所有 NFT。\n    event ApprovalForAll(\n        address indexed _owner,\n        address indexed _operator,\n        bool _approved\n    );\n\n    /// @notice 所有者的 NFT 数量\n    /// @dev 分配给零地址的 NFT 被认为是无效的，并且该函数抛出有关零地址的查询。\n    /// @param _owner 查询余额的地址\n    /// @return `_owner` 拥有的 NFT 数量，可能为零\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /// @notice 找到 NFT 的所有者\n    /// @dev 分配给零地址的 NFT 被认为是无效的，并且对它们的查询确实会抛出异常。\n    /// @param _tokenId NFT 的标识符\n    /// @return NFT所有者的地址\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /// @notice 将 NFT 的所有权从一个地址转移到另一个地址\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\n    ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\n    ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\n    ///  `onERC721Received` on `_to` and throws if the return value is not\n    ///  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    /// @param _from NFT的当前所有者\n    /// @param _to 新 owner\n    /// @param _tokenId 转移的 NFT\n    /// @param data 没有指定格式的附加数据，在调用 _to 时发送\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /// @notice 将 NFT 的所有权从一个地址转移到另一个地址\n    /// @dev 这与具有额外数据参数的其他函数的工作方式相同，只是此函数只是将数据设置为“”。\n    /// @param _from NFT的当前所有者\n    /// @param _to 新 owner\n    /// @param _tokenId 转移的 NFT\n    function safeTransferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) external payable;\n\n    /// @notice 转移 NFT 的所有权——调用者有责任确认 `_to` 能够接收 NFTS，否则它们可能会永久丢失\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\n    ///  `_tokenId` is not a valid NFT.\n    /// @param _from NFT的当前所有者\n    /// @param _to 新 owner\n    /// @param _tokenId 转移的 NFT\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) external payable;\n\n    /// @notice 更改或重申 NFT 的批准地址\n    /// @dev The zero address indicates there is no approved address.\n    ///  Throws unless `msg.sender` is the current NFT owner, or an authorized\n    ///  operator of the current owner.\n    /// @param _approved 新批准的 NFT 控制器\n    /// @param _tokenId NFT 批准\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /// @notice 启用或禁用对第三方（“操作员”）的批准以管理所有 `msg.sender` 的资产\n    /// @dev 发出 ApprovalForAll 事件。 合同必须允许每个所有者有多个操作员。\n    /// @param _operator 添加到授权运营商集中的地址\n    /// @param _approved 如果运营商获得批准，则为 True，如果撤消批准，则为 false\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /// @notice 获取单个 NFT 的认可地址\n    /// @dev 如果 _tokenId 不是有效的 NFT，则抛出。\n    /// @param _tokenId NFT寻找批准的地址\n    /// @return 此 NFT 的批准地址，如果没有则为零地址\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n    /// @notice 查询一个地址是否是另一个地址的授权操作员\n    /// @param _owner 拥有 NFT 的地址\n    /// @param _operator 代表所有者的地址\n    /// @return 如果 _operator 是 _owner 的批准运算符，则为真，否则为假\n    function isApprovedForAll(address _owner, address _operator)\n        external\n        view\n        returns (bool);\n\n}"
			},
			"contracts/03/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\n// 查询某个合约是否支持某个接口，采用函数选择器的方式，interfaceId是某个接口的keccak256的签名\n// 开发NFT市场或者钱包，通过ERC165查询某个合约是否支持ERC721和ERC115标准，以决定如何与该合约交互\ninterface IERC165 {\n  \n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/03/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/03/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/03/IERC165.sol\":{\"keccak256\":\"0x3f27edf30889c6ebc63c69d17c0452666d16399eadbbf5a2e8c991cba0dcc7f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e31c62ad1df0f3fd63477b56dcec786d4ba3735d2da3cb116521e96009587371\",\"dweb:/ipfs/QmT9cpd5L9wscw5ZgZRCmfgZtpBF59YQFRCApn3G5rypYQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/8001/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "当为所有者启用或禁用操作员时，它会发出。 运营者可以管理所有者的所有 NFT。"
							},
							"Transfer(address,address,uint256)": {
								"details": "当任何 NFT 的所有权通过任何形式发生变化时，需要触发该事件。 当 NFT 创建（`from` == 0）和销毁（`to` == 0）时会触发此事件。 例外情况：在合约创建期间，可以创建和分配任意数量的 NFT，而不会发出 Transfer。 在任何形式的资产转移时，该 NFT如果有批准地址将重置为无。"
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "新批准的 NFT 控制器",
									"_tokenId": "NFT 批准"
								}
							},
							"balanceOf(address)": {
								"details": "分配给零地址的 NFT 被认为是无效的，并且该函数抛出有关零地址的查询。",
								"params": {
									"_owner": "查询余额的地址"
								},
								"returns": {
									"_0": "`_owner` 拥有的 NFT 数量，可能为零"
								}
							},
							"getApproved(uint256)": {
								"details": "如果 _tokenId 不是有效的 NFT，则抛出。",
								"params": {
									"_tokenId": "NFT寻找批准的地址"
								},
								"returns": {
									"_0": "此 NFT 的批准地址，如果没有则为零地址"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "代表所有者的地址",
									"_owner": "拥有 NFT 的地址"
								},
								"returns": {
									"_0": "如果 _operator 是 _owner 的批准运算符，则为真，否则为假"
								}
							},
							"ownerOf(uint256)": {
								"details": "分配给零地址的 NFT 被认为是无效的，并且对它们的查询确实会抛出异常。",
								"params": {
									"_tokenId": "NFT 的标识符"
								},
								"returns": {
									"_0": "NFT所有者的地址"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "这与具有额外数据参数的其他函数的工作方式相同，只是此函数只是将数据设置为“”。",
								"params": {
									"_from": "NFT的当前所有者",
									"_to": "新 owner",
									"_tokenId": "转移的 NFT"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "NFT的当前所有者",
									"_to": "新 owner",
									"_tokenId": "转移的 NFT",
									"data": "没有指定格式的附加数据，在调用 _to 时发送"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "发出 ApprovalForAll 事件。 合同必须允许每个所有者有多个操作员。",
								"params": {
									"_approved": "如果运营商获得批准，则为 True，如果撤消批准，则为 false",
									"_operator": "添加到授权运营商集中的地址"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "NFT的当前所有者",
									"_to": "新 owner",
									"_tokenId": "转移的 NFT"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"\\u5f53\\u4e3a\\u6240\\u6709\\u8005\\u542f\\u7528\\u6216\\u7981\\u7528\\u64cd\\u4f5c\\u5458\\u65f6\\uff0c\\u5b83\\u4f1a\\u53d1\\u51fa\\u3002 \\u8fd0\\u8425\\u8005\\u53ef\\u4ee5\\u7ba1\\u7406\\u6240\\u6709\\u8005\\u7684\\u6240\\u6709 NFT\\u3002\"},\"Transfer(address,address,uint256)\":{\"details\":\"\\u5f53\\u4efb\\u4f55 NFT \\u7684\\u6240\\u6709\\u6743\\u901a\\u8fc7\\u4efb\\u4f55\\u5f62\\u5f0f\\u53d1\\u751f\\u53d8\\u5316\\u65f6\\uff0c\\u9700\\u8981\\u89e6\\u53d1\\u8be5\\u4e8b\\u4ef6\\u3002 \\u5f53 NFT \\u521b\\u5efa\\uff08`from` == 0\\uff09\\u548c\\u9500\\u6bc1\\uff08`to` == 0\\uff09\\u65f6\\u4f1a\\u89e6\\u53d1\\u6b64\\u4e8b\\u4ef6\\u3002 \\u4f8b\\u5916\\u60c5\\u51b5\\uff1a\\u5728\\u5408\\u7ea6\\u521b\\u5efa\\u671f\\u95f4\\uff0c\\u53ef\\u4ee5\\u521b\\u5efa\\u548c\\u5206\\u914d\\u4efb\\u610f\\u6570\\u91cf\\u7684 NFT\\uff0c\\u800c\\u4e0d\\u4f1a\\u53d1\\u51fa Transfer\\u3002 \\u5728\\u4efb\\u4f55\\u5f62\\u5f0f\\u7684\\u8d44\\u4ea7\\u8f6c\\u79fb\\u65f6\\uff0c\\u8be5 NFT\\u5982\\u679c\\u6709\\u6279\\u51c6\\u5730\\u5740\\u5c06\\u91cd\\u7f6e\\u4e3a\\u65e0\\u3002\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"\\u65b0\\u6279\\u51c6\\u7684 NFT \\u63a7\\u5236\\u5668\",\"_tokenId\":\"NFT \\u6279\\u51c6\"}},\"balanceOf(address)\":{\"details\":\"\\u5206\\u914d\\u7ed9\\u96f6\\u5730\\u5740\\u7684 NFT \\u88ab\\u8ba4\\u4e3a\\u662f\\u65e0\\u6548\\u7684\\uff0c\\u5e76\\u4e14\\u8be5\\u51fd\\u6570\\u629b\\u51fa\\u6709\\u5173\\u96f6\\u5730\\u5740\\u7684\\u67e5\\u8be2\\u3002\",\"params\":{\"_owner\":\"\\u67e5\\u8be2\\u4f59\\u989d\\u7684\\u5730\\u5740\"},\"returns\":{\"_0\":\"`_owner` \\u62e5\\u6709\\u7684 NFT \\u6570\\u91cf\\uff0c\\u53ef\\u80fd\\u4e3a\\u96f6\"}},\"getApproved(uint256)\":{\"details\":\"\\u5982\\u679c _tokenId \\u4e0d\\u662f\\u6709\\u6548\\u7684 NFT\\uff0c\\u5219\\u629b\\u51fa\\u3002\",\"params\":{\"_tokenId\":\"NFT\\u5bfb\\u627e\\u6279\\u51c6\\u7684\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u6b64 NFT \\u7684\\u6279\\u51c6\\u5730\\u5740\\uff0c\\u5982\\u679c\\u6ca1\\u6709\\u5219\\u4e3a\\u96f6\\u5730\\u5740\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"\\u4ee3\\u8868\\u6240\\u6709\\u8005\\u7684\\u5730\\u5740\",\"_owner\":\"\\u62e5\\u6709 NFT \\u7684\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u5982\\u679c _operator \\u662f _owner \\u7684\\u6279\\u51c6\\u8fd0\\u7b97\\u7b26\\uff0c\\u5219\\u4e3a\\u771f\\uff0c\\u5426\\u5219\\u4e3a\\u5047\"}},\"ownerOf(uint256)\":{\"details\":\"\\u5206\\u914d\\u7ed9\\u96f6\\u5730\\u5740\\u7684 NFT \\u88ab\\u8ba4\\u4e3a\\u662f\\u65e0\\u6548\\u7684\\uff0c\\u5e76\\u4e14\\u5bf9\\u5b83\\u4eec\\u7684\\u67e5\\u8be2\\u786e\\u5b9e\\u4f1a\\u629b\\u51fa\\u5f02\\u5e38\\u3002\",\"params\":{\"_tokenId\":\"NFT \\u7684\\u6807\\u8bc6\\u7b26\"},\"returns\":{\"_0\":\"NFT\\u6240\\u6709\\u8005\\u7684\\u5730\\u5740\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"\\u8fd9\\u4e0e\\u5177\\u6709\\u989d\\u5916\\u6570\\u636e\\u53c2\\u6570\\u7684\\u5176\\u4ed6\\u51fd\\u6570\\u7684\\u5de5\\u4f5c\\u65b9\\u5f0f\\u76f8\\u540c\\uff0c\\u53ea\\u662f\\u6b64\\u51fd\\u6570\\u53ea\\u662f\\u5c06\\u6570\\u636e\\u8bbe\\u7f6e\\u4e3a\\u201c\\u201d\\u3002\",\"params\":{\"_from\":\"NFT\\u7684\\u5f53\\u524d\\u6240\\u6709\\u8005\",\"_to\":\"\\u65b0 owner\",\"_tokenId\":\"\\u8f6c\\u79fb\\u7684 NFT\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"NFT\\u7684\\u5f53\\u524d\\u6240\\u6709\\u8005\",\"_to\":\"\\u65b0 owner\",\"_tokenId\":\"\\u8f6c\\u79fb\\u7684 NFT\",\"data\":\"\\u6ca1\\u6709\\u6307\\u5b9a\\u683c\\u5f0f\\u7684\\u9644\\u52a0\\u6570\\u636e\\uff0c\\u5728\\u8c03\\u7528 _to \\u65f6\\u53d1\\u9001\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"\\u53d1\\u51fa ApprovalForAll \\u4e8b\\u4ef6\\u3002 \\u5408\\u540c\\u5fc5\\u987b\\u5141\\u8bb8\\u6bcf\\u4e2a\\u6240\\u6709\\u8005\\u6709\\u591a\\u4e2a\\u64cd\\u4f5c\\u5458\\u3002\",\"params\":{\"_approved\":\"\\u5982\\u679c\\u8fd0\\u8425\\u5546\\u83b7\\u5f97\\u6279\\u51c6\\uff0c\\u5219\\u4e3a True\\uff0c\\u5982\\u679c\\u64a4\\u6d88\\u6279\\u51c6\\uff0c\\u5219\\u4e3a false\",\"_operator\":\"\\u6dfb\\u52a0\\u5230\\u6388\\u6743\\u8fd0\\u8425\\u5546\\u96c6\\u4e2d\\u7684\\u5730\\u5740\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"NFT\\u7684\\u5f53\\u524d\\u6240\\u6709\\u8005\",\"_to\":\"\\u65b0 owner\",\"_tokenId\":\"\\u8f6c\\u79fb\\u7684 NFT\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"\\u5f53 NFT \\u7684\\u6279\\u51c6\\u5730\\u5740\\u88ab\\u66f4\\u6539\\u6216\\u91cd\\u65b0\\u786e\\u8ba4\\u65f6\\uff0c\\u5b83\\u4f1a\\u53d1\\u51fa\\u3002 \\u96f6\\u5730\\u5740\\u8868\\u793a\\u6ca1\\u6709\\u6279\\u51c6\\u7684\\u5730\\u5740\\u3002 \\u5f53 Transfer \\u4e8b\\u4ef6\\u53d1\\u51fa\\u65f6\\uff0c\\u8fd9\\u4e5f\\u8868\\u660e\\u8be5 NFT \\u5982\\u679c\\u6709\\u6279\\u51c6\\u5730\\u5740\\u88ab\\u91cd\\u7f6e\\u4e3a\\u65e0\\u3002\"}},\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"\\u66f4\\u6539\\u6216\\u91cd\\u7533 NFT \\u7684\\u6279\\u51c6\\u5730\\u5740\"},\"balanceOf(address)\":{\"notice\":\"\\u6240\\u6709\\u8005\\u7684 NFT \\u6570\\u91cf\"},\"getApproved(uint256)\":{\"notice\":\"\\u83b7\\u53d6\\u5355\\u4e2a NFT \\u7684\\u8ba4\\u53ef\\u5730\\u5740\"},\"isApprovedForAll(address,address)\":{\"notice\":\"\\u67e5\\u8be2\\u4e00\\u4e2a\\u5730\\u5740\\u662f\\u5426\\u662f\\u53e6\\u4e00\\u4e2a\\u5730\\u5740\\u7684\\u6388\\u6743\\u64cd\\u4f5c\\u5458\"},\"ownerOf(uint256)\":{\"notice\":\"\\u627e\\u5230 NFT \\u7684\\u6240\\u6709\\u8005\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"\\u5c06 NFT \\u7684\\u6240\\u6709\\u6743\\u4ece\\u4e00\\u4e2a\\u5730\\u5740\\u8f6c\\u79fb\\u5230\\u53e6\\u4e00\\u4e2a\\u5730\\u5740\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"\\u5c06 NFT \\u7684\\u6240\\u6709\\u6743\\u4ece\\u4e00\\u4e2a\\u5730\\u5740\\u8f6c\\u79fb\\u5230\\u53e6\\u4e00\\u4e2a\\u5730\\u5740\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"\\u542f\\u7528\\u6216\\u7981\\u7528\\u5bf9\\u7b2c\\u4e09\\u65b9\\uff08\\u201c\\u64cd\\u4f5c\\u5458\\u201d\\uff09\\u7684\\u6279\\u51c6\\u4ee5\\u7ba1\\u7406\\u6240\\u6709 `msg.sender` \\u7684\\u8d44\\u4ea7\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"\\u8f6c\\u79fb NFT \\u7684\\u6240\\u6709\\u6743\\u2014\\u2014\\u8c03\\u7528\\u8005\\u6709\\u8d23\\u4efb\\u786e\\u8ba4 `_to` \\u80fd\\u591f\\u63a5\\u6536 NFTS\\uff0c\\u5426\\u5219\\u5b83\\u4eec\\u53ef\\u80fd\\u4f1a\\u6c38\\u4e45\\u4e22\\u5931\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/8001/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/03/IERC165.sol\":{\"keccak256\":\"0x3f27edf30889c6ebc63c69d17c0452666d16399eadbbf5a2e8c991cba0dcc7f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e31c62ad1df0f3fd63477b56dcec786d4ba3735d2da3cb116521e96009587371\",\"dweb:/ipfs/QmT9cpd5L9wscw5ZgZRCmfgZtpBF59YQFRCApn3G5rypYQ\"]},\"contracts/8001/ERC721/IERC721.sol\":{\"keccak256\":\"0x2f1e198fb7cacf539f8b87890312f1e9ed0b23c9ff5897ebc70d448a21fe9add\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8069a45cf0cfe98297116e97ed8995341bbaf4ed295c68d91dd5ded73cf2e011\",\"dweb:/ipfs/QmZiyBHPcEiyqJco2Bu2EKGyWpQXgmDSnfh1CAH8wBptF4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "当 NFT 的批准地址被更改或重新确认时，它会发出。 零地址表示没有批准的地址。 当 Transfer 事件发出时，这也表明该 NFT 如果有批准地址被重置为无。"
							}
						},
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "更改或重申 NFT 的批准地址"
							},
							"balanceOf(address)": {
								"notice": "所有者的 NFT 数量"
							},
							"getApproved(uint256)": {
								"notice": "获取单个 NFT 的认可地址"
							},
							"isApprovedForAll(address,address)": {
								"notice": "查询一个地址是否是另一个地址的授权操作员"
							},
							"ownerOf(uint256)": {
								"notice": "找到 NFT 的所有者"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "将 NFT 的所有权从一个地址转移到另一个地址"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "将 NFT 的所有权从一个地址转移到另一个地址"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "启用或禁用对第三方（“操作员”）的批准以管理所有 `msg.sender` 的资产"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "转移 NFT 的所有权——调用者有责任确认 `_to` 能够接收 NFTS，否则它们可能会永久丢失"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/03/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/03/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							9
						]
					},
					"id": 10,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IERC165",
							"nameLocation": "329:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "01ffc9a7",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "355:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "380:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "373:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:20:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "416:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:6:0"
									},
									"scope": 9,
									"src": "346:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 10,
							"src": "319:106:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:394:0"
				},
				"id": 0
			},
			"contracts/8001/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/8001/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							9
						],
						"IERC721": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 11,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/03/IERC165.sol",
							"file": "../../03/IERC165.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 10,
							"src": "56:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"276:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 9,
										"src": "276:7:1"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "276:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "88:167:1",
								"text": "@title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd."
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								9
							],
							"name": "IERC721",
							"nameLocation": "265:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "291:395:1",
										"text": "@dev 当任何 NFT 的所有权通过任何形式发生变化时，需要触发该事件。\n当 NFT 创建（`from` == 0）和销毁（`to` == 0）时会触发此事件。\n例外情况：在合约创建期间，可以创建和分配任意数量的 NFT，而不会发出 Transfer。\n在任何形式的资产转移时，该 NFT如果有批准地址将重置为无。"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 24,
									"name": "Transfer",
									"nameLocation": "697:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "731:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "715:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "762:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "746:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "791:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "775:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:100:1"
									},
									"src": "691:115:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "812:232:1",
										"text": " 当 NFT 的批准地址被更改或重新确认时，它会发出。\n 零地址表示没有批准的地址。\n 当 Transfer 事件发出时，这也表明该 NFT 如果有批准地址被重置为无。"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 33,
									"name": "Approval",
									"nameLocation": "1055:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1089:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1073:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1121:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1105:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1156:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1140:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:107:1"
									},
									"src": "1049:122:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1177:116:1",
										"text": "@dev 当为所有者启用或禁用操作员时，它会发出。 运营者可以管理所有者的所有 NFT。"
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1304:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1344:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1328:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1376:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1360:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1400:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1395:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:97:1"
									},
									"src": "1298:118:1"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1422:252:1",
										"text": "@notice 所有者的 NFT 数量\n @dev 分配给零地址的 NFT 被认为是无效的，并且该函数抛出有关零地址的查询。\n @param _owner 查询余额的地址\n @return `_owner` 拥有的 NFT 数量，可能为零"
									},
									"functionSelector": "70a08231",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1688:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1706:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1698:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1697:16:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1737:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:9:1"
									},
									"scope": 125,
									"src": "1679:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1752:226:1",
										"text": "@notice 找到 NFT 的所有者\n @dev 分配给零地址的 NFT 被认为是无效的，并且对它们的查询确实会抛出异常。\n @param _tokenId NFT 的标识符\n @return NFT所有者的地址"
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1992:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2008:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2000:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:18:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2041:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:9:1"
									},
									"scope": 125,
									"src": "1983:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2056:809:1",
										"text": "@notice 将 NFT 的所有权从一个地址转移到另一个地址\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from NFT的当前所有者\n @param _to 新 owner\n @param _tokenId 转移的 NFT\n @param data 没有指定格式的附加数据，在调用 _to 时发送"
									},
									"functionSelector": "b88d4fde",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2879:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2913:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2905:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2936:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2928:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2957:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2949:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2990:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2975:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 66,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2975:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:105:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3017:0:1"
									},
									"scope": 125,
									"src": "2870:148:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3024:312:1",
										"text": "@notice 将 NFT 的所有权从一个地址转移到另一个地址\n @dev 这与具有额外数据参数的其他函数的工作方式相同，只是此函数只是将数据设置为“”。\n @param _from NFT的当前所有者\n @param _to 新 owner\n @param _tokenId 转移的 NFT"
									},
									"functionSelector": "42842e0e",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3350:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3407:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3399:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3428:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3420:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:76:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3459:0:1"
									},
									"scope": 125,
									"src": "3341:119:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3466:508:1",
										"text": "@notice 转移 NFT 的所有权——调用者有责任确认 `_to` 能够接收 NFTS，否则它们可能会永久丢失\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from NFT的当前所有者\n @param _to 新 owner\n @param _tokenId 转移的 NFT"
									},
									"functionSelector": "23b872dd",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3988:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4018:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4010:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4041:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4033:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4062:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4054:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4000:76:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4093:0:1"
									},
									"scope": 125,
									"src": "3979:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4100:323:1",
										"text": "@notice 更改或重申 NFT 的批准地址\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved 新批准的 NFT 控制器\n @param _tokenId NFT 批准"
									},
									"functionSelector": "095ea7b3",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4437:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4453:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4445:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:37:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4498:0:1"
									},
									"scope": 125,
									"src": "4428:71:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4505:375:1",
										"text": "@notice 启用或禁用对第三方（“操作员”）的批准以管理所有 `msg.sender` 的资产\n @dev 发出 ApprovalForAll 事件。 合同必须允许每个所有者有多个操作员。\n @param _operator 添加到授权运营商集中的地址\n @param _approved 如果运营商获得批准，则为 True，如果撤消批准，则为 false"
									},
									"functionSelector": "a22cb465",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4894:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "4920:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4912:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4936:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "4931:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:35:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4955:0:1"
									},
									"scope": 125,
									"src": "4885:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "4962:227:1",
										"text": "@notice 获取单个 NFT 的认可地址\n @dev 如果 _tokenId 不是有效的 NFT，则抛出。\n @param _tokenId NFT寻找批准的地址\n @return 此 NFT 的批准地址，如果没有则为零地址"
									},
									"functionSelector": "081812fc",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5203:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5223:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5215:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "5256:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:9:1"
									},
									"scope": 125,
									"src": "5194:71:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "5271:255:1",
										"text": "@notice 查询一个地址是否是另一个地址的授权操作员\n @param _owner 拥有 NFT 的地址\n @param _operator 代表所有者的地址\n @return 如果 _operator 是 _owner 的批准运算符，则为真，否则为假"
									},
									"functionSelector": "e985e9c5",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5540:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5565:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5557:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5581:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5573:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5556:35:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5639:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5639:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5638:6:1"
									},
									"scope": 125,
									"src": "5531:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 126,
							"src": "255:5393:1",
							"usedErrors": [],
							"usedEvents": [
								24,
								33,
								42
							]
						}
					],
					"src": "32:5616:1"
				},
				"id": 1
			}
		}
	}
}